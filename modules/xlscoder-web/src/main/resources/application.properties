server.port=8089

#Local MySQL instance
spring.datasource.username=xlscoder
spring.datasource.password=#A^X@7pjF

#Drop everything in database before running - good for testing.
#Change to "create" for first run in production, or "validate" for safe usage, or "none" if you really sure
#https://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html
spring.jpa.hibernate.ddl-auto=create-drop

#https://garygregory.wordpress.com/2013/06/18/what-are-the-java-timezone-ids/
#http://www.b.shuttle.de/hayek/hayek/jochen/wp/blog-en/2017/04/26/mysql-mariadb-and-cest-as-server-time-zone-value/
spring.datasource.url=jdbc:mysql://localhost:3306/xlscoder?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Europe/Moscow

#Commenting this solves:
#Warning: This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver


# H2 in-memory database
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:
#spring.datasource.username=sa
#spring.datasource.password=
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2

#Show SQL in console
spring.jpa.show-sql=true

#Allow case-sensitive field names
#https://stackoverflow.com/questions/28571848/spring-boot-jpa-insert-in-table-with-uppercase-name-with-hibernate
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

endpoints.mappings.sensitive=false
endpoints.env.sensitive=false